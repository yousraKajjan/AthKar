import 'package:baqa_atera/screens/diffrenet/Asil/cubit/cubit.dart';
import 'package:baqa_atera/screens/diffrenet/Asil/cubit/state.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

class Asil {
  final Text? body;
  final Text? best;
  int? count;
  Asil({required this.body, required this.best, required this.count});
}

List<Asil> werdAlAsil = [
  Asil(
      body: const Text('ÿ£ÿ≥ÿ™ÿ∫ŸÅÿ± ÿßŸÑŸÑŸá '),
      best: const Text(
          'ÿπŸÜ ÿßÿ®ŸÜ ÿπÿ®ÿßÿ≥ ŸÇÿßŸÑ: ŸÇÿßŸÑ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá : ((ŸÖŸÜ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ ÿßŸÑÿßÿ≥ÿ™ÿ∫ŸÅÿßÿ± ÿ¨ÿπŸÑ ÿßŸÑŸÑŸá ŸÑŸá ŸÖŸÜ ŸÉŸÄŸÄŸÄŸÑ ŸáŸÖ ŸÅÿ±ÿ¨ÿß Ÿà ŸÖŸÜ ŸÉŸÑŸë ÿ∂ŸäŸÇ ŸÖÿÆÿ±ÿ¨ÿßŸãÿå Ÿàÿ±ÿ≤ŸÇŸá ŸÖŸÜ ÿ≠Ÿäÿ´ ŸÑÿß Ÿäÿ≠ÿ™ÿ≥ÿ®)). ÿ£ÿÆÿ±ÿ¨Ÿá ÿßŸÑÿ™ÿ±ŸÖÿ∞Ÿä. '),
      count: 100),
  Asil(
      body: const Text(
          'ÿßŸÑŸÑŸéŸëŸáŸèŸÖŸéŸë ÿµŸÑ ÿπŸÑŸâ ÿ≥ŸäÿØŸÜÿß ŸÖÿ≠ŸÖÿØ ÿπÿ®ÿØŸÉ Ÿàÿ±ÿ≥ŸàŸÑŸÉ ÿßŸÑŸÜÿ®Ÿä ÿßŸÑÿ£ŸÖŸä ŸàÿπŸÑŸâ ÿ¢ŸÑŸá Ÿàÿµÿ≠ÿ®Ÿá Ÿàÿ≥ŸÑŸëŸÖ. '),
      best: const Text(
          'ÿπŸÜ ÿ£ÿ®Ÿä Ÿáÿ±Ÿäÿ±ÿ© ŸÇÿßŸÑ: ŸÇÿßŸÑ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá ÿµŸÑŸâ ÿßŸÑŸÑŸá ÿπŸÑŸäŸá Ÿàÿ≥ŸÑŸÖ: ( ŸÖŸéŸÜŸí ÿµŸÑŸëŸâ ÿπŸÑŸäŸéŸë ÿµŸÑÿßÿ© ÿµŸÑŸâ ÿßŸÑŸÑŸá ÿπŸÑŸäŸá ÿ®ŸÖÿß ÿπÿ¥ÿ±ÿßŸã )). ÿ£ÿÆÿ±ÿ¨Ÿá ŸÖÿ≥ŸÑŸÖ.'),
      count: 100),
  Asil(
      body: const Text(
          'ŸÑÿß ÿ•ŸÑŸá ÿ•ŸÑÿß ÿßŸÑŸÑŸá Ÿàÿ≠ÿØŸá ŸÑÿß ÿ¥ÿ±ŸäŸÉ ŸÑŸáÿå ŸÑŸá ÿßŸÑŸÖŸÑŸÄŸÄŸÉ ŸàŸÑŸÄŸÄŸá ÿßŸÑÿ≠ŸÖÿØ ŸàŸáŸà ÿπŸÑŸâ ŸÉŸÑ ÿ¥Ÿäÿ° ŸÇÿØŸäÿ±. '),
      best: const Text(
          ' ÿπŸÜ ÿ£ÿ®Ÿä Ÿáÿ±Ÿäÿ±ÿ© ÿ£ŸÜ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá ÿµŸÑŸâ ÿßŸÑŸÑŸá ÿπŸÑŸäŸá Ÿàÿ≥ŸÑŸÖ ŸÇÿßŸÑ: (( ŸÖŸÜ ŸÇÿßŸÑ: ŸÑÿß ÿ•ŸÑŸá ÿ•ŸÑÿß ÿßŸÑŸÑŸá Ÿàÿ≠ÿØŸá ŸÑÿß ÿ¥ÿ±ŸäŸÉ ŸÑŸáÿå ŸÑŸÄŸÄŸÄŸá ÿßŸÑŸÖŸÑŸÉ'
          ' ŸàŸÑŸá ÿßŸÑÿ≠ŸÖÿØ ŸàŸáŸà ÿπŸÑŸâ ŸÉŸÑ ÿ¥Ÿäÿ° ŸÇÿØŸäÿ± ŸÅŸä ÿßŸÑŸäŸàŸÖ ŸÖÿ¶ÿ© ŸÖÿ±Ÿëÿ©ÿå ŸÉÿßŸÜÿ™ ŸÑŸá ÿπÿØŸÑ ÿπÿ¥ÿ± ÿ±ŸÇÿßÿ® ŸàŸÉÿ™ÿ®ÿ™ ŸÑŸá ŸÖÿ¶ÿ© ÿ≠ÿ≥ŸÜÿ©ÿå ŸàŸÖÿ≠Ÿäÿ™ ÿπŸÜŸá ŸÖÿ¶ÿ© ÿ≥Ÿäÿ¶ÿ©ÿå'
          ' Ÿà ŸÉÿßŸÜÿ™ ŸÑŸá ÿ≠ÿ±ÿ≤ÿßŸã ŸÖŸÜ ÿßŸÑÿ¥Ÿäÿ∑ÿßŸÜ ŸäŸàŸÖŸá ÿ∞ŸÑŸÉ ÿ≠ÿ™Ÿâ ŸäŸÖÿ≥Ÿä ŸàŸÑŸÖ Ÿäÿ£ÿ™Ÿê ÿ£ÿ≠ÿØŸå ÿ®ÿ£ŸÅÿ∂ŸÑ ŸÖŸÖÿß ÿ¨ÿßÿ° ÿ®Ÿá ÿ•ŸÑÿß ÿ±ÿ¨ŸÑ ÿπŸÖŸÑ ÿ£ŸÉÿ´ÿ± ŸÖŸÜŸáÿß)) ÿ£ÿÆÿ±ÿ¨Ÿá ÿßŸÑÿ¥ŸäÿÆÿßŸÜ .'),
      count: 100),
  Asil(
      body: const Text('ÿ¨ÿ≤Ÿâ ÿßŸÑŸÑŸá ÿπŸÜÿß ÿ≥ŸäÿØŸÜÿß ŸÖÿ≠ŸÖÿØÿßŸã ÿ®ŸÖÿß ŸáŸà ÿ£ŸáŸÑŸá. '),
      best: const Text(
          'ÿ£ÿÆÿ±ÿ¨ ÿ£ÿ®Ÿà ŸÜÿπŸäŸÖ ÿπŸÜ ÿßÿ®ŸÜ ÿπÿ®ÿßÿ≥ ÿ£ŸÜ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá ÿµŸÑŸâ ÿßŸÑŸÑŸá ÿπŸÑŸäŸá Ÿàÿ≥ŸÑŸÖ ŸÇÿßŸÑ: '
          '(( ŸÖŸéŸÜŸí ŸÇÿßŸÑ : ÿ¨ÿ≤Ÿâ ÿßŸÑŸÑŸá ÿπŸÜÿß ŸÖÿ≠ŸÖÿØÿßŸã ÿ®ŸÖÿß ŸáŸà ÿ£ŸáŸÑŸáÿå ÿ£ÿ™ÿπÿ® ÿ≥ÿ®ÿπŸäŸÜ ŸÖŸÑŸÉÿßŸã ÿ£ŸÑŸÅ ÿµÿ®ÿßÿ≠ )).'),
      count: 100),
  Asil(
      body: const Text(' €åÿß ÿ±ÿ® ŸÑŸÉ ÿßŸÑÿ≠ŸÖÿØ ŸÉŸÖÿß ŸäŸÜÿ®ÿ∫Ÿä ŸÑÿ¨ŸÑÿßŸÑ Ÿàÿ¨ŸáŸÉ ŸàŸÑÿπÿ∏ŸäŸÖ ÿ≥ŸÑÿ∑ÿßŸÜŸÉ. '),
      best: const Text(
          'ÿπŸÜ ÿßÿ®ŸÜ ÿπŸÖÿ± ÿ£ŸÜ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá ŸáŸÑ ÿ≠ÿØÿ´ŸáŸÖ : ÿ£ŸÜŸë ÿπÿ®ÿØÿßŸã ŸÖŸÜ ÿπÿ®ÿßÿØ ÿßŸÑŸÑŸá ÿ™ÿπÿßŸÑŸâ ŸÇÿßŸÑ: '
          'Ÿäÿßÿ±ÿ® ŸÑŸÉ ÿßŸÑÿ≠ŸÖÿØ ...) ŸÅÿπÿ∂ŸÑÿ™ ÿ®ÿßŸÑŸÖŸÑŸÉŸäŸÜ ŸÅŸÑŸÖ ŸäÿØÿ±Ÿäÿß ŸÉŸäŸÅ ŸäŸÉÿ™ÿ®ÿßŸÜŸáÿß ŸÅÿµÿπÿØÿß ÿ•ŸÑŸâ ÿßŸÑÿ≥ŸÖÿßÿ° ŸÅŸÇÿßŸÑÿß: Ÿäÿßÿ±ÿ® ÿ•ŸÜ '
          'ÿπÿ®ÿØŸÉ ŸÇÿØ ŸÇÿßŸÑ ŸÖŸÇÿßŸÑÿ© ŸÑÿß ŸÜÿØÿ±Ÿä ŸÉŸäŸÅ ŸÜŸÉÿ™ÿ®Ÿáÿß.'
          ' ŸÇÿßŸÑ ÿßŸÑŸÑŸá ÿ™ÿπÿßŸÑŸâ ŸÖÿß ŸÇÿßŸÑ ÿπÿ®ÿØŸä ‚Äì ŸàŸáŸà ÿ£ÿπŸÑŸÖ ÿ®ŸÖÿß ŸÇÿßŸÑ ÿπÿ®ÿØŸá -'
          'ŸÅŸÇÿßŸÑÿß: Ÿäÿßÿ±ÿ® ÿ•ŸÜŸá ŸÇÿßŸÑ: ( Ÿäÿßÿ±ÿ® ŸÑŸÉ ÿßŸÑÿ≠ŸÖÿØ ŸÅŸÇÿßŸÑ ÿßŸÑŸÑŸá ÿ™ÿπÿßŸÑŸâ ŸÑŸáŸÖÿß : ( ÿßŸÉÿ™ÿ®ÿßŸáÿß ŸÉŸÖÿß ŸÇÿßŸÑ ÿπÿ®ÿØŸä ÿ≠ÿ™Ÿâ ŸäŸÑŸÇÿßŸÜŸä ŸÅÿ£ÿ¨ÿ≤ŸäŸá ÿ®ŸÖÿß ).'
          ' ÿ£ÿÆÿ±ÿ¨Ÿá ÿßŸÑÿ•ŸÖÿßŸÖ ÿ£ÿ≠ŸÖÿØ Ÿà ÿßÿ®ŸÜ ŸÖÿßÿ¨Ÿá.'),
      count: 100),
  Asil(
      body: const Text(
          'ÿ≥ÿ®ÿ≠ÿßŸÜ ÿßŸÑŸÑŸá Ÿàÿ®ÿ≠ŸÖÿØŸáÿå ÿ≥ÿ®ÿ≠ÿßŸÜ ÿßŸÑŸÑŸá ÿßŸÑÿπÿ∏ŸäŸÖÿå ÿ£ÿ≥ÿ™ÿ∫ŸÅÿ± ÿßŸÑŸÑŸá Ÿàÿ£ÿ™Ÿàÿ® ÿ•ŸÑŸäŸá. '),
      best: const Text(
          'ÿπŸÜ ÿ£ÿ®Ÿä Ÿáÿ±Ÿäÿ±ÿ© ÿßŸÑŸÑŸá ŸÇÿßŸÑ: ŸÇÿßŸÑ ÿ±ÿ≥ŸàŸÑ ÿßŸÑŸÑŸá : ⁄©ŸÑŸÖÿ™ÿßŸÜ ÿÆŸÅŸäŸÅÿ™ÿßŸÜ ÿπŸÑŸâ ÿßŸÑŸÑÿ≥ÿßŸÜÿå ÿ´ŸÇŸäŸÑÿ™ÿßŸÜ ŸÅŸä ÿßŸÑŸÖŸäÿ≤ÿßŸÜ ÿ≠ÿ®Ÿäÿ®ÿ™ÿßŸÜ ÿ•ŸÑŸâ ÿßŸÑÿ±ÿ≠ŸÖŸÜ: (( ÿ≥ÿ®ÿ≠ÿßŸÜ ÿßŸÑŸÑŸá Ÿà ÿ®ÿ≠ŸÖÿØŸá ÿ≥ÿ®ÿ≠ÿßŸÜ ÿßŸÑŸÑŸá ÿßŸÑÿπÿ∏ŸäŸÖ )). '
          'ÿ£ÿÆÿ±ÿ¨Ÿá ÿßŸÑÿ®ÿÆÿßÿ±Ÿä. '),
      count: 100),
  Asil(
      body: const Text('. Ÿäÿß ÿ≠Ÿä Ÿäÿß ŸÇŸäŸàŸÖ ŸÑÿß ÿ•ŸÑŸá ÿ•ŸÑÿß ÿ£ŸÜÿ™. '),
      best: const Text(
          'ÿ∞ŸÉÿ± ÿßŸÑÿ¥ŸäÿÆ ÿπÿ®ÿØ ÿßŸÑŸÑŸá ÿ≥ÿ±ÿßÿ¨ ÿßŸÑÿØŸäŸÜ ÿ±ÿ≠ŸÖŸá ÿßŸÑŸÑŸá ÿ™ÿπÿßŸÑŸâ ÿ£ŸÜŸáÿß ŸÑÿ≠Ÿäÿßÿ© ÿßŸÑŸÇŸÑÿ® ÿ®ÿßŸÑÿ•ŸäŸÖÿßŸÜ.'),
      count: 41)
];

class AlAsislScreen extends StatelessWidget {
  AlAsislScreen({super.key});
  bool isLognText = false;

  @override
  Widget build(BuildContext context) {
    return BlocProvider(
      create: (context) => AsilCubit(),
      child: BlocConsumer<AsilCubit, AsilState>(
        listener: (context, state) {},
        builder: (context, state) {
          return Scaffold(
            appBar: AppBar(
              title: const Text('üåºŸàÿ±ÿØ ÿßŸÑÿ£ÿµŸäŸÑüåº'),
            ),
            body: ListView.separated(
                itemBuilder: (context, index) =>
                    AsilItem(werdAlAsil[index], context),
                separatorBuilder: (context, index) => const SizedBox(
                      height: 10,
                    ),
                itemCount: werdAlAsil.length),
          );
        },
      ),
    );
  }

  Widget AsilItem(Asil A, context) => Card(
        margin: const EdgeInsets.all(10),
        color: Colors.green[200],
        child: Padding(
          padding: const EdgeInsets.all(5.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.end,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Text('${A.body!.data}'),
              ),
              const SizedBox(
                height: 10,
              ),
              TextButton(
                onPressed: () {
                  // FlutterToastr.show('${A.best!.data}', context);

                  showDialog(
                      context: context,
                      builder: (context) {
                        return AlertDialog(
                            backgroundColor: Colors.green[100],
                            elevation: 10,
                            title: Center(
                              child: Text(
                                ' ${A.best!.data}' 'üåºüåºüåº',
                                textDirection: TextDirection.rtl,
                              ),
                            ),
                            actions: <Widget>[
                              TextButton(
                                onPressed: () {
                                  Navigator.pop(context);
                                },
                                child: const Center(
                                  child: Text(
                                    'ÿ™ŸÖ',
                                    style: TextStyle(
                                      fontSize: 20,
                                      color: Color.fromARGB(255, 0, 115, 209),
                                    ),
                                  ),
                                ),
                              )
                            ]);
                      });
                },
                child: const Text(
                  'üåº' 'ÿ£ŸÇÿ±ÿ£ ÿπŸÜ ÿßŸÑŸÅÿ∂ÿßÿ¶ŸÑ' 'üåº',
                  style: TextStyle(fontSize: 20),
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: [
                  Padding(
                    padding: const EdgeInsets.all(8.0),
                    child: FloatingActionButton(
                      backgroundColor: Colors.green[300],
                      isExtended: true,
                      //focusColor: Colors.amber,
                      child: const Icon(
                        Icons.thumb_up,
                        // color: Colors.white,
                      ),
                      onPressed: () {
                        AsilCubit.get(context).changeSubmit(A, context);
                      },
                    ),
                  ),
                  MaterialButton(
                    color: Colors.green[300],
                    onPressed: () {
                      AsilCubit.get(context).changeSubmit(A, context);
                    },
                    child: Text(
                      '${A.count}',
                      style: const TextStyle(fontSize: 20),
                      // style: const TextStyle(
                      // color: Color.fromARGB(255, 218, 242, 4),),
                    ),
                  )
                ],
              ),
            ],
          ),
        ),
      );
}
